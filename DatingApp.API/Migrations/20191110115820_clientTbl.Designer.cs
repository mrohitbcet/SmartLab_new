// <auto-generated />
using System;
using DatingApp.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatingApp.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191110115820_clientTbl")]
    partial class clientTbl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatingApp.API.Models.Client", b =>
                {
                    b.Property<int>("CID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CName")
                        .HasMaxLength(200);

                    b.HasKey("CID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("DatingApp.API.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CID");

                    b.Property<string>("Doctorname")
                        .HasMaxLength(100);

                    b.HasKey("DoctorID");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("DatingApp.API.Models.Employee", b =>
                {
                    b.Property<int>("employee_number")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("employee_name")
                        .HasMaxLength(100);

                    b.HasKey("employee_number");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("DatingApp.API.Models.GroupMaster", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName")
                        .HasMaxLength(100);

                    b.HasKey("GroupId");

                    b.ToTable("GroupMasters");
                });

            modelBuilder.Entity("DatingApp.API.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DRrefby");

                    b.Property<string>("OPD")
                        .HasMaxLength(100);

                    b.Property<string>("address")
                        .HasMaxLength(500);

                    b.Property<string>("city")
                        .HasMaxLength(100);

                    b.Property<string>("contactNo")
                        .HasMaxLength(40);

                    b.Property<string>("dateofbirth")
                        .HasMaxLength(100);

                    b.Property<string>("email")
                        .HasMaxLength(200);

                    b.Property<string>("gender")
                        .HasMaxLength(10);

                    b.Property<string>("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("DatingApp.API.Models.TestMaster", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupId");

                    b.Property<string>("NormalRange")
                        .HasMaxLength(100);

                    b.Property<decimal>("Price");

                    b.Property<string>("TestName")
                        .HasMaxLength(200);

                    b.Property<string>("Unit")
                        .HasMaxLength(100);

                    b.HasKey("TestId");

                    b.HasIndex("GroupId");

                    b.ToTable("TestMasters");
                });

            modelBuilder.Entity("DatingApp.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CID");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DatingApp.API.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("DatingApp.API.Models.TestMaster", b =>
                {
                    b.HasOne("DatingApp.API.Models.GroupMaster", "GroupMaster")
                        .WithMany("TestMaster")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
